{"title":"Water and Energy Balances","markdown":{"yaml":{"title":"Water and Energy Balances","date":"2022-05-18","categories":["arduino"],"echo":false,"jupyter":"python3"},"headingText":"Water balance","containsRefs":false,"markdown":"\n\n![](/archive/figures/greenhouse1.png)\n\nFigure from [Rodriguez *et al*. (2010)](/archive/teaching-material/rodriguez-2010-Dynamic-modeling-and-simulation-of-greenhouse-environments-under-several-scenarios--A-web-based-application.pdf).\n\n\nA useful source is Nadia Christina Sabeh's [PhD thesis](https://www.proquest.com/docview/304894665), 2007.\n\n![](/archive/figures/greenhouse-Sabeh1.png)\n\n$$\nE_V + E_C + E_S + E_T = 0\n$$\n\n## Energy balance\n\n![](/archive/figures/greenhouse-Sabeh2.png)\n\n$$\nQ_R + Q_G + Q_V + Q_S + Q_P + Q_L + Q_H = 0\n$$\n\n\n## Evaporative Cooling\n\n![](/archive/figures/evaporative-cooling.png)\n\n![](https://yairmau.github.io/website/archive/hydrology/hydrology_figures/evaporation_2.png)\n\n## Potential Evapotranspiration\n\n### Penman (1948)\n\nThis equation accounts for two main terms:\n* the first is the available energy flux density,\n* the second term is the drying power of the air.\n\n$$\nPE = \\frac{\\Delta(R_n-G) + \\gamma\\cdot 2.6 (1+0.536 u_2)\\text{VPD}}{\\lambda(\\Delta+\\gamma)}\n$$\n\nMore about this [here](https://yairmau.github.io/website/markdown/2020/02/03/evapotranspiration-lecture.html).\n\n### PyET\n\nLuckily, we don't have to work very hard to estimate the potential evapotranspiration.\nWe will use the Python library `pyet`:\n\n* [documentation](https://pyet.readthedocs.io/en/latest/index.html)\n* [github](https://github.com/phydrus/pyet)\n\nUsing PyET is quite straightforward:\n\n```{.python code-line-numbers=\"1\"}\npyet.pm_fao56(tmean,               # mean temperature\n              wind,                # wind speed\n              rn=rn,               # net radiation\n              tmax=tmax,           # max temperature\n              tmin=tmin,           # max temperature\n              rh=rh,               # relative humidity\n              elevation=elevation) # elevation above sea level\n```\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","include-before-body":["../../_custom_header.html"],"css":["../../custom.scss"],"highlight-style":"breezedark","output-file":"water-and-energy-balances.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.335","theme":["flatly","../../custom.scss"],"title-block-banner":true,"title":"Water and Energy Balances","date":"2022-05-18","categories":["arduino"],"jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}}}