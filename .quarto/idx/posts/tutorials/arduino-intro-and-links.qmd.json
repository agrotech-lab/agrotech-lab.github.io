{"title":"Arduino intro","markdown":{"yaml":{"title":"Arduino intro","date":"2022-03-09","categories":["arduino"],"echo":false,"jupyter":"python3"},"headingText":"What is a microcontroller?","containsRefs":false,"markdown":"\n\n![](https://www.mouser.co.il/images/marketingid/2010/img/111714832.png?v=111120.0142)\n\nWelcome to the world of microcontrollers! In this course, we will be exploring the fascinating world of microcontrollers and how they can be used to control electronic devices.\n\n\nA microcontroller, also known as an MCU, is a tiny computer that is capable of performing a variety of tasks. It is a single metal-oxide-semiconductor (MOS) integrated circuit (IC) chip that contains one or more central processing units (CPUs), memory, and programmable input/output peripherals. The MCU can receive input from various sensors and devices, process that input, and provide an output to control other devices.\n\n#### Arduino\n\nOne popular brand of microcontrollers is Arduino. Arduino is a company that produces user-friendly microcontroller boards, such as the Arduino Uno, Arduino Mega, and Arduino Nano. These boards are widely used and have extensive documentation and online resources available. The Arduino board contains a microcontroller chip, memory, and input/output pins that can be used to interface with other electronic components such as sensors, motors, LEDs, and displays.\n\nThe Arduino board can be programmed using a simplified version of the C++ programming language, which makes it accessible for beginners to learn and use. The board is also open-source, meaning that anyone can access and modify the hardware and software designs.\n\n#### Applications\n\nArduino is being used for a wide variety of applications, including home automation, robotics, environmental monitoring, and education. For instance, Arduino can be used to control lights, fans, and other appliances in a home automation system. It is popular among hobbyists and students for building robots and automated systems. Lastly, Arduino is widely used to monitor temperature, humidity, and other environmental factors for research or industrial applications.\n\n#### ESP32 = Arduino$^2$ + WiFi + Bluetooth\nHowever, in this course, we will not be using Arduino boards. Instead, we will be using the ESP32 microcontroller (to be exact, the FIreBeetle 2 ESP32 board), which is similar to Arduino in terms of its programming environment, but has additional features such as built-in WiFi and Bluetooth capabilities. This makes it ideal for internet of things (IoT) projects and wireless communication. The ESP32 is also affordable, with boards costing around $5 each.\n\nThroughout this course, you will learn how to program the ESP32 to control various electronic devices. You will learn how to interface the ESP32 with sensors, motors, displays, and other devices. By the end of this course, you will have the skills and knowledge to create your own custom microcontroller projects.\n\nSo get ready to dive into the exciting world of microcontrollers with the ESP32!\n\n\n\n![](/archive/figures/arduino-intro1.png)\n\n![](/archive/figures/arduino-intro2.png)\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","include-before-body":["../../_custom_header.html"],"css":["../../custom.scss"],"highlight-style":"breezedark","output-file":"arduino-intro-and-links.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","theme":["flatly","../../custom.scss"],"title-block-banner":true,"title":"Arduino intro","date":"2022-03-09","categories":["arduino"],"jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}}}