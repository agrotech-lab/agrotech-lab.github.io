{
  "hash": "11668d4bff232a2e67ba904a7dd3f1c8",
  "result": {
    "markdown": "---\ntitle: Arduino Nano\nauthor: agrotech\ndate: '2022-04-12'\ncategories:\n  - project\necho: false\n---\n\n![](https://www.arduino.cc/en/uploads/Main/Nano.jpg)\n\nFor those of you that took home an arduino nano to play with, we have a few pointers.\n\n### 5V vs 3.3V\n\nWhile ESP32 works on 3.3V, Arduino nano works on 5V.\nThat means that the [digitalWrite()](https://www.arduino.cc/reference/en/language/functions/digital-io/digitalwrite/) function will send 5V to a pin and that the ADC can read voltaged in the 0-5V range (using the function [analogRead()](https://www.arduino.cc/en/Reference/AnalogRead)).  \n**IMPORTANT** - don't forget that ESP32 is 3.3V when going back to it from the Arduino.\nIt is important to note that the arduino nano has a 3.3V pin that can be used. Most of the sesnsors we use are compatible with 3.3V so if you use that pin there is less chance of making mistakes later on.\n\n### ADC\nArduino has a 10bit ADC.\n\n### Settings in the Arduino IDE\n\nNo need to hold a button on the board when uploading code (Yay!).\nYou will need to change the settings in the Arduino IDE:  \n`Tools -> Board -> \"Arduino Nano\"`  \n`Tools -> Processor: \"ATmega328P (Olad Bootloader)\"`  \nAs you can see in this image:\n\n![](/archive/figures/arduino_nano_IDE.jpg)\n\n",
    "supporting": [
      "arduino-nano_files"
    ],
    "filters": [],
    "includes": {}
  }
}