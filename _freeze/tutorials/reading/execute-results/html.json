{
  "hash": "80c731f27094b96d7351c0e18c8e2e4f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Reading digital and analog\necho: false\nexecute:\n  freeze: auto\n---\n\n<!-- ---\ntitle: \"\"\necho: false\njupyter: python3\nsection-divs: false\n--- -->\n\n\n\n## Turn on LED upon button press\n\n```{=html}\n<button class=\"btn btn-outline-dark  rounded\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#led_buttonino\" aria-expanded=\"false\" aria-controls=\"led_buttonino\">\n    <i class=\"bi bi-toggles\"></i> Toggle code\n    </button>\n     <a class=\"btn btn-outline-dark rounded\", href=\"/archive/code/led_button.ino\" download target=\"_blank\" rel=\"noopener noreferrer\">\n        <i class=\"bi bi-download\"></i> Download code\n    </a>\n```\n```{=html}\n\n            <div class=\"collapse\" id=\"led_buttonino\">\n            <div class=\"card card-body border-0\">\n        \n```\n```{.c code-line-numbers=\"1\"}\n// Define the pin numbers\nconst int buttonPin = D4;\nconst int ledPin = A4;\n\nvoid setup() {\n  // Set the pin modes\n  pinMode(buttonPin, INPUT_PULLUP);\n  pinMode(ledPin, OUTPUT);\n\n  // Initialize Serial communication\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  // Read the state of the button\n  int buttonState = digitalRead(buttonPin);\n\n  // If the button is not pressed (pin is pulled high)\n  if (buttonState == HIGH) {\n    // Turn on the LED\n    digitalWrite(ledPin, LOW);\n\n    // Print the button state to the Serial Monitor\n    Serial.println(\"Button is not pressed.\");\n  } else {\n    // Turn off the LED\n    digitalWrite(ledPin, HIGH);\n\n    // Print the button state to the Serial Monitor\n    Serial.println(\"Button is pressed.\");\n  }\n\n  // Delay for a short period to debounce the button\n  delay(50);\n}\n\n```\n\n```{=html}\n\n            </div>\n            </div>\n            \n```\n\n\n## Toggle LED upon button press\n\n```{=html}\n<button class=\"btn btn-outline-dark  rounded\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#button_led_toggleino\" aria-expanded=\"false\" aria-controls=\"button_led_toggleino\">\n    <i class=\"bi bi-toggles\"></i> Toggle code\n    </button>\n     <a class=\"btn btn-outline-dark rounded\", href=\"/archive/code/button_led_toggle.ino\" download target=\"_blank\" rel=\"noopener noreferrer\">\n        <i class=\"bi bi-download\"></i> Download code\n    </a>\n```\n```{=html}\n\n            <div class=\"collapse\" id=\"button_led_toggleino\">\n            <div class=\"card card-body border-0\">\n        \n```\n```{.c code-line-numbers=\"1\"}\n// Define the pin numbers\nconst int buttonPin = D4;\nconst int ledPin = A4;\n\n// Initialize the LED state to off\nbool ledState = false;\n\nvoid setup() {\n  // Set the pin modes\n  pinMode(buttonPin, INPUT_PULLUP);\n  pinMode(ledPin, OUTPUT);\n\n  // Initialize Serial communication\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  // Read the state of the button\n  int buttonState = digitalRead(buttonPin);\n\n  // If the button is pressed\n  if (buttonState == LOW) {\n    // Toggle the LED state\n    ledState = !ledState;\n    digitalWrite(ledPin, ledState);\n\n    // Print the LED state to the Serial Monitor\n    if (ledState) {\n      Serial.println(\"LED is on.\");\n    } else {\n      Serial.println(\"LED is off.\");\n    }\n\n    // Wait a short period to debounce the button\n    delay(500);\n  }\n}\n\n```\n\n```{=html}\n\n            </div>\n            </div>\n            \n```\n\n\n## Touch sensor\n\n```{=html}\n<button class=\"btn btn-outline-dark  rounded\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#touch_sensorino\" aria-expanded=\"false\" aria-controls=\"touch_sensorino\">\n    <i class=\"bi bi-toggles\"></i> Toggle code\n    </button>\n     <a class=\"btn btn-outline-dark rounded\", href=\"/archive/code/touch_sensor.ino\" download target=\"_blank\" rel=\"noopener noreferrer\">\n        <i class=\"bi bi-download\"></i> Download code\n    </a>\n```\n```{=html}\n\n            <div class=\"collapse\" id=\"touch_sensorino\">\n            <div class=\"card card-body border-0\">\n        \n```\n```{.c code-line-numbers=\"1\"}\n#include <Arduino.h>\n\n// Define the touch sensor pin\n#define TOUCH_PIN D12  // You can change this to another touch pin if needed\n\nvoid setup() {\n  // Initialize serial communication at 115200 baud\n  Serial.begin(115200);\n  \n  // Wait for the serial monitor to connect\n  while (!Serial) {\n    ; // Wait for serial port to connect. Needed for native USB port only\n  }\n}\n\nvoid loop() {\n  // Read the value from the touch sensor\n  int touchValue = touchRead(TOUCH_PIN);\n\n  // Print the touch sensor value\n  Serial.print(\"Touch value: \");\n  Serial.println(touchValue);\n  \n  // Check if the touch sensor is activated (value will be lower when touched)\n  if (touchValue < 30) {  // You might need to adjust this threshold value\n    Serial.println(\"Touch detected!\");\n  }\n\n  // Add a small delay to avoid spamming the serial monitor\n  delay(100);\n}\n\n```\n\n```{=html}\n\n            </div>\n            </div>\n            \n```\n\n\n## Control LED with touch sensor\n\n```{=html}\n<button class=\"btn btn-outline-dark  rounded\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#touch_control_LEDino\" aria-expanded=\"false\" aria-controls=\"touch_control_LEDino\">\n    <i class=\"bi bi-toggles\"></i> Toggle code\n    </button>\n     <a class=\"btn btn-outline-dark rounded\", href=\"/archive/code/touch_control_LED.ino\" download target=\"_blank\" rel=\"noopener noreferrer\">\n        <i class=\"bi bi-download\"></i> Download code\n    </a>\n```\n```{=html}\n\n            <div class=\"collapse\" id=\"touch_control_LEDino\">\n            <div class=\"card card-body border-0\">\n        \n```\n```{.c code-line-numbers=\"1\"}\n#include <Arduino.h>\n\n// Define the touch sensor pin\n#define TOUCH_PIN T0  // You can change this to another touch pin if needed\n\n// Define the built-in LED pin\n#define LED_PIN LED_BUILTIN  // Most ESP32 boards use GPIO 2 for the built-in LED\n\nvoid setup() {\n  // Initialize serial communication at 115200 baud\n  Serial.begin(115200);\n  \n  // Wait for the serial monitor to connect\n  while (!Serial) {\n    ; // Wait for serial port to connect. Needed for native USB port only\n  }\n\n  // Set the LED pin as an output\n  pinMode(LED_PIN, OUTPUT);\n}\n\nvoid loop() {\n  // Read the value from the touch sensor\n  int touchValue = touchRead(TOUCH_PIN);\n\n  // Print the touch sensor value\n  Serial.print(\"Touch value: \");\n  Serial.println(touchValue);\n  \n  // Check if the touch sensor is activated (value will be lower when touched)\n  if (touchValue < 30) {  // You might need to adjust this threshold value\n    Serial.println(\"Touch detected!\");\n    digitalWrite(LED_PIN, HIGH);  // Turn on the LED\n  } else {\n    digitalWrite(LED_PIN, LOW);  // Turn off the LED\n  }\n\n  // Add a small delay to avoid spamming the serial monitor\n  delay(100);\n}\n\n```\n\n```{=html}\n\n            </div>\n            </div>\n            \n```\n\n\n",
    "supporting": [
      "reading_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}