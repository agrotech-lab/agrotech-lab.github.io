{
  "hash": "906cb6a165c6adc43840051ae4b33346",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Digital sensors\necho: false\nexecute:\n  freeze: auto\n---\n\n<!-- ---\ntitle: \"\"\necho: false\njupyter: python3\nsection-divs: false\n--- -->\n\n\n\n## SHT31 Temperature & Humidity Sensor Using I2C communication\n\nIn [this tutorial](http://www.esp32learning.com/code/esp32-and-sht31-sensor-example.php) you can find a lot more information.\n\n\nCode for reading the sensor:\n\n```{=html}\n<button class=\"btn btn-outline-dark  rounded\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#sht31ino\" aria-expanded=\"false\" aria-controls=\"sht31ino\">\n    <i class=\"bi bi-toggles\"></i> Toggle code\n    </button>\n     <a class=\"btn btn-outline-dark rounded\", href=\"/archive/code/sht31.ino\" download target=\"_blank\" rel=\"noopener noreferrer\">\n        <i class=\"bi bi-download\"></i> Download code\n    </a>\n```\n```{=html}\n\n            <div class=\"collapse\" id=\"sht31ino\">\n            <div class=\"card card-body border-0\">\n        \n```\n```{.c code-line-numbers=\"1\"}\n/*\n * This program is a modification of\n * http://www.esp32learning.com/code/esp32-and-sht31-sensor-example.php\n */\n#include <Arduino.h>   // Include the Arduino library\n#include <Wire.h>      // Include the Wire library for I2C communication\n#include \"Adafruit_SHT31.h\" // Include the SHT31 library from Adafruit\n\nAdafruit_SHT31 sht31 = Adafruit_SHT31(); // Create an instance of the SHT31 object\n\nvoid setup() {\n  Serial.begin(115200);        // Initialize the serial communication with a baud rate of 112500\n  if (! sht31.begin(0x44)) {   // Check if SHT31 is connected and start it with address 0x44\n    // Print an error message if SHT31 is not found\n    Serial.println(\"Couldn't find SHT31\");\n    while (1) delay(1);  // Wait indefinitely\n  }\n}\n\nvoid loop() {\n  // Read temperature from SHT31 and assign it to \"temperature\"\n  float temperature = sht31.readTemperature(); \n  // Read relative humidity from SHT31 and assign it to \"humidity\"\n  float humidity = sht31.readHumidity();\n\n  if (! isnan(temperature)) {     // Check if t is not NaN (not a number)\n    Serial.print(\"temp_deg_C:\");  // Print temperature label\n    Serial.print(temperature);    // Print temperature value\n    Serial.print(\"\\t\");           // Write a tab space\n  } \n  else {\n    // Print an error message if temperature reading fails\n    Serial.println(\"Failed to read temperature\");\n  }\n\n  if (! isnan(humidity)) {        // Check if h is not NaN (not a number)\n    Serial.print(\"rel_hum_%:\");   // Print humidity label\n    Serial.print(humidity);       // Print humidity value\n  } \n  else {\n    // Print an error message if humidity reading fails\n    Serial.println(\"Failed to read humidity\");\n  }\n\n  Serial.println();    // Break line\n  delay(1000);         // Wait 1 second\n}\n\n```\n\n```{=html}\n\n            </div>\n            </div>\n            \n```\n\n\n<br>\n\n## VL53L0X Time-of-Flight Distance Sensor Using I2C communication\n\nIn [this tutorial](http://www.esp32learning.com/code/vl53l0x-time-of-flight-sensor-and-esp32.php) you can find a lot more information.\n\nCode for reading the sensor:\n\n```{=html}\n<button class=\"btn btn-outline-dark  rounded\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#Agrotech_2022_VL53L0Xino\" aria-expanded=\"false\" aria-controls=\"Agrotech_2022_VL53L0Xino\">\n    <i class=\"bi bi-toggles\"></i> Toggle code\n    </button>\n     <a class=\"btn btn-outline-dark rounded\", href=\"/archive/code/Agrotech_2022_VL53L0X.ino\" download target=\"_blank\" rel=\"noopener noreferrer\">\n        <i class=\"bi bi-download\"></i> Download code\n    </a>\n```\n```{=html}\n\n            <div class=\"collapse\" id=\"Agrotech_2022_VL53L0Xino\">\n            <div class=\"card card-body border-0\">\n        \n```\n```{.c code-line-numbers=\"1\"}\n#include \"Adafruit_VL53L0X.h\"\n\n// also on http://www.esp32learning.com/code/vl53l0x-time-of-flight-sensor-and-esp32.php\nAdafruit_VL53L0X lox = Adafruit_VL53L0X();\n\nvoid setup() {\n  Serial.begin(115200);\n\n  // wait until serial port opens for native USB devices\n  while (! Serial) {\n    delay(1);\n  }\n  \n  Serial.println(\"Adafruit VL53L0X test\");\n  if (!lox.begin()) {\n    Serial.println(F(\"Failed to boot VL53L0X\"));\n    while(1);\n  }\n  // power \n  Serial.println(F(\"VL53L0X API Simple Ranging example\\n\\n\")); \n}\n\n\nvoid loop() {\n  VL53L0X_RangingMeasurementData_t measure;\n    \n  Serial.print(\"Reading a measurement... \");\n  lox.rangingTest(&measure, false); // pass in 'true' to get debug data printout!\n\n  if (measure.RangeStatus != 4) {  // phase failures have incorrect data\n    Serial.print(\"Distance (mm): \"); Serial.println(measure.RangeMilliMeter);\n  } else {\n    Serial.println(\" out of range \");\n  }\n    \n  delay(100);\n}\n```\n\n```{=html}\n\n            </div>\n            </div>\n            \n```\n\n\n<br>\n\n## DS18B20 Temperature Sensor\n\nPretty accurate temperature sensor.\nEach sensor has its own unique address, enabling the connection of numerous sensors to only on pin on the Arduino/ESP32.\n\nIn [this tutorial](https://randomnerdtutorials.com/esp32-multiple-ds18b20-temperature-sensors/) you can find a lot more information.\n\nCode for finding the sensor's address:\n\n```{=html}\n<button class=\"btn btn-outline-dark  rounded\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#Agrotech_2022_find_DS18B20ino\" aria-expanded=\"false\" aria-controls=\"Agrotech_2022_find_DS18B20ino\">\n    <i class=\"bi bi-toggles\"></i> Toggle code\n    </button>\n     <a class=\"btn btn-outline-dark rounded\", href=\"/archive/code/Agrotech_2022_find_DS18B20.ino\" download target=\"_blank\" rel=\"noopener noreferrer\">\n        <i class=\"bi bi-download\"></i> Download code\n    </a>\n```\n```{=html}\n\n            <div class=\"collapse\" id=\"Agrotech_2022_find_DS18B20ino\">\n            <div class=\"card card-body border-0\">\n        \n```\n```{.c code-line-numbers=\"1\"}\n/*\n * Rui Santos \n * Complete Project Details https://randomnerdtutorials.com\n */\n\n#include <OneWire.h>\n\n// Based on the OneWire library example\n\nOneWire ds(4);  //data wire connected to GPIO 4\n\nvoid setup(void) {\n  Serial.begin(115200);\n}\n\nvoid loop(void) {\n  byte i;\n  byte addr[8];\n  \n  if (!ds.search(addr)) {\n    Serial.println(\" No more addresses.\");\n    Serial.println();\n    ds.reset_search();\n    delay(250);\n    return;\n  }\n  Serial.print(\" ROM =\");\n  for (i = 0; i < 8; i++) {\n    Serial.write(' ');\n    Serial.print(addr[i], HEX);\n  }\n}\n```\n\n```{=html}\n\n            </div>\n            </div>\n            \n```\n\n\n",
    "supporting": [
      "digital-sensors_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}