---
title: "Electronics Class 2"
echo: false
jupyter: python3
execute:
  freeze: auto  # re-render only when source changes
---

{{< include ../_insert_ino_code.qmd >}}


---

## Digital read

- **Goal**: Read button press and take an action (flash external LED).

Use the following code.

```{python}
#| echo: false
#| output: asis
code_source("button-digitalread.ino")
```

<details>
<summary>see diagram</summary>
![](/archive/figures/diagrams/button-flashLED_bb.png)
</details>

<details>
<summary>see wiring scheme</summary>
![](/archive/figures/diagrams/button-flashLED_schem.png)
</details>


## Reading an Analog Pin, convert to digital with built-in ADC

We will read the signal (middle) pin of the potentiometer, and use the 12-bit built-in Analog to Digital Converter.

```{python}
#| echo: false
#| output: asis
code_source("analog-read.ino")
```

<details>
<summary>see diagram</summary>
![](/archive/figures/diagrams/potentiometer-esp32_bb.png)
</details>

<details>
<summary>see wiring scheme</summary>
![](/archive/figures/diagrams/potentiometer-esp32_schem.png)
</details>

Why is the maximum number 4095? What does this have to do with 12-bits?

## Reading an Analog Pin, convert to voltage

Use the same wiring as above. We will convert bits to volts now: $4095 \text{ bits} = 3.3\text{ volts}$.

```{python}
#| echo: false
#| output: asis
code_source("ADC-to-voltage.ino")
```

## PWM with ESP32

Pulse-width modulation (PWM) is a method of controlling the average power delivered by an electrical signal. The average value of voltage (and current) fed to the load is controlled by switching the supply between 0 and 100% at a rate faster than it takes the load to change significantly. **PWM is a technique for getting analog results with digital means.** Digital control is used to create a square wave, a signal switched between on and off. This on-off pattern can simulate voltages in between the full Vcc of the board and off by changing the portion of time the signal spends on versus the time that the signal spends off. PWM is used in many applications such as controlling motor speed, heat output of heaters and variable speed fan controllers.

![](https://cdn.sparkfun.com/assets/f/9/c/8/a/512e869bce395fbc64000002.JPG)

Use the following code to activate LED pin with PWM, using the potentiometer as input.


```{python}
#| echo: false
#| output: asis
code_source("potentiometer-PWM.ino")
```

<details>
<summary>see diagram</summary>
![](/archive/figures/diagrams/potentiometer-PWM-LED-esp32_bb.png)
</details>

<details>
<summary>see wiring scheme</summary>
![](/archive/figures/diagrams/potentiometer-PWM-LED-esp32_schem.png)
</details>

